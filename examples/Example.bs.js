// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Pino = require("pino");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Helmet = require("helmet");
var Express = require("bs-express/src/Express.js");
var Process = require("process");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var ExpressPinoLogger = require("express-pino-logger");

var app = Express.express(/* () */0);

var pino = Pino(/* () */0);

Express.App[/* use */0](app, Helmet(/* () */0));

Express.App[/* use */0](app, ExpressPinoLogger({
          logger: pino
        }));

Express.App[/* get */4](app, "/", Express.Middleware[/* from */5]((function (_next, _req, res) {
            return Express.Response[/* sendString */2]("Hello world", res);
          })));

function onListen(port, e) {
  var exit = 0;
  var val;
  try {
    val = e;
    exit = 1;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      pino.error("Error onListen: ", exn[1]);
      Process.exit(1);
      return /* () */0;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    pino.info("Listening at http://127.0.0.1:", port);
    return /* () */0;
  }
  
}

Express.App[/* listen */19](app, 3333, (function (param) {
        return onListen(3333, param);
      }), /* () */0);

var httpPort = 3333;

exports.app = app;
exports.pino = pino;
exports.onListen = onListen;
exports.httpPort = httpPort;
/* app Not a pure module */
